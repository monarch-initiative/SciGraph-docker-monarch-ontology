server:
  type: simple
  applicationContextPath: /scigraph
  adminContextPath: /admin
  connector:
    type: http
    port: 9000

applicationContextPath: scigraph

graphConfiguration:
  location: /scigraph/graph
  indexedNodeProperties:
    - label
  exactNodeProperties:
    - label
  neo4jConfig:
    dump_configuration : true
    dbms.pagecache.memory : 6g
    dbms.transaction.timeout: 2m

  INJECT_CURIES

cypherResources:
    ##################
    ### Graph Algorithms
    ##################

    ## Get the shortest path between two IDs
    - path: /dynamic/shortest
      query: |
              MATCH (start:Node{iri:'${start_id}'})-[:equivalentClass|sameAs*0..1]-(startLeader:cliqueLeader) 
              WITH startLeader
              MATCH (end:Node{iri:'${end_id}'})-[:equivalentClass|sameAs*0..1]-(endLeader:cliqueLeader)
              WITH startLeader, endLeader
              MATCH path = shortestPath((startLeader)-[:${relationship}*..${max_depth}]->(endLeader))
              RETURN path
      operations:
        - summary: Get the shortest path between two IDs
          parameters:
            - name: start_id
              description: The starting node (ex HP:0011014)
              paramType: query
            - name: end_id
              description: The ending node (ex HP:0000118)
              paramType: query
            - name: max_depth
              description: the maximum depth to traverse
              paramType: query
            - name: relationship
              description: The property to traverse (ex subClassOf or subClassOf|partOf|isA)
              paramType: query
              required: false

    ##################
    ### Clique merge
    ##################

    ## CliqueLeader service
    - path: /dynamic/cliqueLeader/{id}
      query: |
              START start = node:node_auto_index(iri={id})
              MATCH (start)-[:equivalentClass|sameAs*0..1]-(leader:cliqueLeader)
              RETURN leader
      operations:
        - summary: Returns the clique leader.
          parameters:
            - name: id
              description: The node to start from.
              paramType: path

    ## Clique service
    - path: /dynamic/clique/{id}
      query: |
              START start = node:node_auto_index(iri={id})
              MATCH path = (start)-[:equivalentClass|sameAs*]-(eq:Node)
              RETURN path
      operations:
        - summary: Returns the id and all its equivalents
          parameters:
            - name: id
              description: Curie formatted identifier
              paramType: path

    ## Candidate Clique Service
    - path: /dynamic/candidateClique/{id}
      query: |
              START start = node:node_auto_index(iri={id})
              MATCH path = (start)-[:equivalentClass|sameAs|OIO:hasDbXref*]-(eq:Node)
              RETURN path
      operations:
        - summary: Returns ids that are equivalent and potentially equivalent (xrefs)
          parameters:
            - name: id
              description: Curie formatted identifier
              paramType: path


serviceMetadata:
  name: 'Monarch Reconciliation Service'
  identifierSpace: 'http://monarchinitiative.org/'
  schemaSpace: 'http://monarchinitiative.org/'
  view: {
    url: 'http://monarch3-1.cslu.ohsu.edu/scigraph/refine/view/{{id}}'
  }
  preview: {
    url: 'http://monarch3-1.cslu.ohsu.edu/scigraph/refine/preview/{{id}}',
    width: 400,
    height: 400
  }
